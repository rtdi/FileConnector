showFooter : function() {
	return false;
},
init : function() {
	var oModel = new JSONModel();
	var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
	oModel.loadData("../rest/connections/" + encodeURI(sConnectionname) + "/remoteschemas");
	this.getView().setModel(oModel);
	oStateModel.setProperty("/title", "File Schemas");
	oStateModel.setProperty("/breadcrumbs", [ 
		{"text" : "Homepage", "link" : "./Home"}, 
		{"text" : "Connections", "link" : "./Connections"}, 
		{"text" : "Schemas", "link" : "./Browse?connectionname=" + encodeURI(sConnectionname) }
	] );
},
edit : function(oEvent) {
},
save : function(oEvent) {
},
cancel : function(oEvent) {
},
onNewSchema : function() {
	window.location.href = 'EditSchema';
},
onFilenamePress : function(oEvent) {
	var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
	var path = oEvent.getSource().getBindingContext().getPath();
	var oModel = this.getView().getModel();
	var obj = oModel.getProperty(path);
	window.location.href = 'EditSchema?connectionname=' + encodeURI(sConnectionname) + "&schemaname=" + encodeURI(obj.tablename);
},
FileSizeFormatter : function(size) {
	if (typeof size === "undefined") {
		return "";
	}
	var mb = 1024*1024;
	var gb = mb*1024;
	if (size > gb) {
		return (size/gb).toFixed() + " GB";
	} else if (size > mb) {
		return (size/mb).toFixed() + " MB";
	} else if (size > 1024) {
		return (size/1024).toFixed() + " KB";
	} else {
		return size + " Bytes";
	}
},
UnixDateFormatter : function(epoche) {
	if (typeof epoche === "undefined") {
		return "";
	}
	var current = Date.now();
	var age = (current - epoche)/1000;
	if (age > 3600*24 || age < 0) {
		var date = new Date(epoche);
		return date.toISOString().split('T')[0];
	} else if (age > 3600) {
		return (age/3600).toFixed() + "h";
	} else if (age > 60) {
		return (age/60).toFixed() + "min";
	} else {
		return age.toFixed() + "sec";
	}
}
