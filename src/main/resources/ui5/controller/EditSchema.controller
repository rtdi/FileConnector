showFooter : function() {
	return true;
},
init : function() {
	var oModel = new JSONModel();
	var that = this;
	var sSchemaname = jQuery.sap.getUriParameters().get("schemaname");
	var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
	if (sSchemaname == null) {
		oModel.loadData("../rest/fileschemas/" + encodeURI(sConnectionname) + "/new/template");
	} else {
		oModel.attachRequestCompleted(function() {
	        that.onFilenamePatternChange(null);
	    });
		oModel.loadData("../rest/fileschemas/" + encodeURI(sConnectionname) + "/" + encodeURI(sSchemaname));
	}
	this.getView().setModel(oModel);

	var oCharsetModel = new JSONModel();
	oCharsetModel.setSizeLimit(1000);
	oCharsetModel.loadData("../rest/charsets");
	this.getView().setModel(oCharsetModel, "charsets");

	var oLocaleModel = new JSONModel();
	oLocaleModel.setSizeLimit(1000);
	oLocaleModel.loadData("../rest/locales");
	this.getView().setModel(oLocaleModel, "locales");

	var oStateModel = this.getView().getModel("state");
	oStateModel.setProperty("/title", "Edit File Schema");
	oStateModel.setProperty("/breadcrumbs", [ 
		{"text" : "Homepage", "link" : "./Home"}, 
		{"text" : "Connections", "link" : "./Connections"}, 
		{"text" : "Schemas", "link" : "./Browse?connectionname=" + encodeURI(sConnectionname) }
	] );
},
edit : function(oEvent) {
},
save : function(oEvent) {
	var oModel = this.getView().getModel();
	var sSchemaname = oModel.getProperty("/schemaname");
	var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
	if (!!sSchemaname) {
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("POST", "../rest/fileschemas/" + encodeURI(sConnectionname) + "/" + encodeURI(sSchemaname));
		xmlhttp.setRequestHeader("Content-Type", "application/json");
		var that = this;
		xmlhttp.onreadystatechange = function() {
		    if (xmlhttp.readyState == 4) {
		    	if (xmlhttp.status == 200) {
			        that.displaySuccess(JSON.parse(xmlhttp.responseText));
			    } else {
			        that.displayError(JSON.parse(xmlhttp.responseText));
			    }
		    }
		}
		xmlhttp.send(oModel.getJSON());
	} else {
		sap.m.MessageToast.show("No name of the schema entered, cannot save");
	}
},
cancel : function(oEvent) {
},
onFilenamePatternChange : function(oEvent) {
	var oModel = this.getView().getModel();
	var pattern = oModel.getProperty("/filenamepattern");
	var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
	var oFileModel = new JSONModel();
	oFileModel.loadData("../rest/files/" + encodeURI(sConnectionname) + "/" + btoa(pattern) + "/100");
	this.getView().setModel(oFileModel, "files");
},
onDataFileChange : function(oEvent) {
	this.readraw();
},
onPressRawDataRefresh : function(oEvent) {
	this.readraw();
},
onPressParsedDataRefresh : function(oEvent) {
	this.readparsed();
},
onPressGuessSettings : function(oEvent) {
	var oItem = this.getView().byId("idfilelist").getSelectedItem();
	if (!!oItem) {
		var oModel = this.getView().getModel();
		var that = this;
		var sFilePath = oItem.data().path;
		var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("POST", "../rest/files/guess/" + encodeURI(sConnectionname) + "/" + encodeURI(sFilePath));
		xmlhttp.setRequestHeader("Content-Type", "application/json");
		xmlhttp.onreadystatechange = function() {
		    if (xmlhttp.readyState == 4) {
		    	if (xmlhttp.status == 200) {
					oModel.setJSON(xmlhttp.responseText);
					that.readparsed();
			    } else {
			        that.displayError(JSON.parse(xmlhttp.responseText));
			    }
		    }
	    }
		xmlhttp.send(oModel.getJSON());
	}
},
readraw : function() {
	var oItem = this.getView().byId("idfilelist").getSelectedItem();
	if (!!oItem) {
		var oModel = this.getView().getModel();
		var that = this;
		var sFilePath = oItem.data().path;
		var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("POST", "../rest/files/raw/" + encodeURI(sConnectionname) + "/" + encodeURI(sFilePath));
		xmlhttp.setRequestHeader("Content-Type", "application/json");
		xmlhttp.onreadystatechange = function() {
		    if (xmlhttp.readyState == 4) {
		    	if (xmlhttp.status == 200) {
					var oDataModel = new JSONModel();
					oDataModel.setJSON(xmlhttp.responseText);
		        	that.getView().setModel(oDataModel, "rawdata");
			    } else {
			        that.displayError(JSON.parse(xmlhttp.responseText));
			    }
		    }
	    }
		xmlhttp.send(oModel.getJSON());
	}
},
readparsed : function() {
	var oItem = this.getView().byId("idfilelist").getSelectedItem();
	if (!!oItem) {
		var oModel = this.getView().getModel();
		var that = this;
		var sFilePath = oItem.data().path;
		var sConnectionname = jQuery.sap.getUriParameters().get("connectionname");
		var xmlhttp = new XMLHttpRequest();
		xmlhttp.open("POST", "../rest/files/parsed/" + encodeURI(sConnectionname) + "/" + encodeURI(sFilePath));
		xmlhttp.setRequestHeader("Content-Type", "application/json");
		xmlhttp.onreadystatechange = function() {
		    if (xmlhttp.readyState == 4) {
		    	if (xmlhttp.status == 200) {
					var oDataModel = new JSONModel();
					oDataModel.setJSON(xmlhttp.responseText);
		        	that.getView().setModel(oDataModel, "parseddata");
		        	oModel.setProperty("/columns", oDataModel.getProperty("/columns"));
			    } else {
			        that.displayError(JSON.parse(xmlhttp.responseText));
			    }
		    }
	    }
		xmlhttp.send(oModel.getJSON());
	}
},
onDataFileUpdateFinished : function(oEvent) {
	var oControl = oEvent.getSource();
	if (oControl.getItems().length > 0) {
		var oItem = oControl.getItems()[0];
		oControl.setSelectedItem(oItem, true);
		this.readraw();
	}
},
columnFactory : function(sId, oContext) {
	var oModel = this.getView().getModel();
	var sName = oContext.getProperty("name");

	var oItemTemplate = new sap.ui.core.Item({
    	text : '{value}'
	});
	var oDatatypeSelector = new sap.m.ComboBox({value: "{datatype}", width: "150px" });
	oDatatypeSelector.bindItems("/datatypes", oItemTemplate);
	
	return new sap.m.Column(sId+"-col", {
		header: new sap.m.Label({ text: "{name}" }),
		footer: oDatatypeSelector
	});
},
rowFactory : function(sId, oContext) {
	var oModel = this.getView().getModel();
	var oTable = this.getView().byId("CSVTable");
	var aColumns = oModel.getProperty("/columns");

	var row = new sap.m.ColumnListItem(sId+"-row");
	for( var i = 0; i < aColumns.length; i++) {
		row.addCell(new sap.m.Text({text: {path: "parseddata>" + aColumns[i].name}, wrapping: false }));
	}
	return row;
}
